// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model order {
  id        Int       @id   @default(autoincrement())
  orderDate DateTime

  providerId  Int
  provider    provider @relation(fields: [providerId], references: [id])

  orderDetails orderDetails[]
}

model provider {
  id          Int       @id   @default(autoincrement())
  name        String    @unique
  Address     String
  
  order order[]
}

model orderDetails {
  id              Int       @id   @default(autoincrement())
  price           Float
  shippingCost    Float
  OrderQuantity   Int
  ExpectedDate    DateTime

  orderId         Int
  order           order @relation(fields: [orderId], references: [id])

  productId       Int
  product         product @relation(fields: [productId], references: [id])

  warehouseId     Int
  warehouse       warehouse @relation(fields: [warehouseId], references: [id])
}

model product {
  id              Int       @id   @default(autoincrement())
  name            String
  unitPrice       Float
  width           Float
  height          Float
  depth           Float
  Weight          Float
  Expiration      Boolean
  ExpirationDate  DateTime?

  orderDetails orderDetails[]

  delivery delivery[]

  inventory inventory[]
}

model customer {
  id              Int       @id   @default(autoincrement())
  name            String    @unique
  email           String    @unique
  phoneNumber     String
  password        String
  address         String

  delivery delivery[]
}

model delivery {
  id              Int       @id   @default(autoincrement())
  orderDate       DateTime

  customerId      Int
  customer        customer @relation(fields: [customerId], references: [id])

  productId       Int
  product         product @relation(fields: [productId], references: [id])

  deliveryDetails deliveryDetails[]
}

model deliveryDetails {
  id              Int       @id   @default(autoincrement())
  price           Float
  shippingCost    Float
  OrderQuantity   Int
  ExpectedDate    DateTime

  deliveryId      Int
  delivery        delivery @relation(fields: [deliveryId], references: [id])

  warehouseId     Int
  warehouse       warehouse @relation(fields: [warehouseId], references: [id])
}

model admin {
  id              Int       @id   @default(autoincrement())
  name            String    @unique
  email           String    @unique
  phoneNumber     String
  password        String

  warehouseOnAdmin warehouseOnAdmin[]
}

model warehouse {
  id              Int       @id   @default(autoincrement())
  address         String
  capacity        Boolean

  warehouseOnAdmin warehouseOnAdmin[]

  inventory inventory[]

  orderDetails orderDetails[]

  deliveryDetails deliveryDetails[]
}

model inventory {
  id              Int       @id   @default(autoincrement())
  quantity        Int
  available       Boolean
  reorderPoint    Int

  productId       Int
  product         product   @relation(fields: [productId], references: [id])

  warehouseId     Int
  warehouse       warehouse @relation(fields: [warehouseId], references: [id])
}

model warehouseOnAdmin{
  warehouseId     Int
  warehouse       warehouse @relation(fields: [warehouseId], references: [id])

  adminId         Int
  admin           admin @relation(fields: [adminId], references: [id])

  @@id([warehouseId, adminId])
}